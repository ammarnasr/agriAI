{
    "request": {
        "headers": {
            "accept": "image/tiff",
            "content-type": "application/json"
        },
        "payload": {
            "evalscript": " //VERSION=3 (auto-converted from 2)\nvar degToRad = Math.PI / 180;\n\nfunction evaluatePixelOrig(samples) {\n  var sample = samples[0];\n  var b03_norm = normalize(sample.B03, 0, 0.253061520471542);\n  var b04_norm = normalize(sample.B04, 0, 0.290393577911328);\n  var b05_norm = normalize(sample.B05, 0, 0.305398915248555);\n  var b06_norm = normalize(sample.B06, 0.006637972542253, 0.608900395797889);\n  var b07_norm = normalize(sample.B07, 0.013972727018939, 0.753827384322927);\n  var b8a_norm = normalize(sample.B8A, 0.026690138082061, 0.782011770669178);\n  var b11_norm = normalize(sample.B11, 0.016388074192258, 0.493761397883092);\n  var b12_norm = normalize(sample.B12, 0, 0.493025984460231);\n  var viewZen_norm = normalize(Math.cos(sample.viewZenithMean * degToRad), 0.918595400582046, 1);\n  var sunZen_norm  = normalize(Math.cos(sample.sunZenithAngles * degToRad), 0.342022871159208, 0.936206429175402);\n  var relAzim_norm = Math.cos((sample.sunAzimuthAngles - sample.viewAzimuthMean) * degToRad)\n\n  var n1 = neuron1(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm);\n  var n2 = neuron2(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm);\n  var n3 = neuron3(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm);\n  var n4 = neuron4(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm);\n  var n5 = neuron5(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm);\n  \n  var l2 = layer2(n1, n2, n3, n4, n5);\n  \n  var cab = denormalize(l2, 0.007426692959872, 873.908222110306);\n  return {\n    default: [cab / 300]\n  }\n}\n\nfunction neuron1(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm) {\n  var sum =\n\t  4.242299670155190\n\t+ 0.400396555256580 * b03_norm\n\t+ 0.607936279259404 * b04_norm\n\t+ 0.137468650780226 * b05_norm\n\t- 2.955866573461640 * b06_norm\n\t- 3.186746687729570 * b07_norm\n\t+ 2.206800751246430 * b8a_norm\n\t- 0.313784336139636 * b11_norm\n\t+ 0.256063547510639 * b12_norm\n\t- 0.071613219805105 * viewZen_norm\n\t+ 0.510113504210111 * sunZen_norm\n\t+ 0.142813982138661 * relAzim_norm;\n\n  return tansig(sum);\n}\n\nfunction neuron2(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm) {\n  var sum =\n\t- 0.259569088225796\n\t- 0.250781102414872 * b03_norm\n\t+ 0.439086302920381 * b04_norm\n\t- 1.160590937522300 * b05_norm\n\t- 1.861935250269610 * b06_norm\n\t+ 0.981359868451638 * b07_norm\n\t+ 1.634230834254840 * b8a_norm\n\t- 0.872527934645577 * b11_norm\n\t+ 0.448240475035072 * b12_norm\n\t+ 0.037078083501217 * viewZen_norm\n\t+ 0.030044189670404 * sunZen_norm\n\t+ 0.005956686619403 * relAzim_norm;\n\n  return tansig(sum);\n}\n\nfunction neuron3(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm) {\n  var sum =\n\t+ 3.130392627338360\n\t+ 0.552080132568747 * b03_norm\n\t- 0.502919673166901 * b04_norm\n\t+ 6.105041924966230 * b05_norm\n\t- 1.294386119140800 * b06_norm\n\t- 1.059956388352800 * b07_norm\n\t- 1.394092902418820 * b8a_norm\n\t+ 0.324752732710706 * b11_norm\n\t- 1.758871822827680 * b12_norm\n\t- 0.036663679860328 * viewZen_norm\n\t- 0.183105291400739 * sunZen_norm\n\t- 0.038145312117381 * relAzim_norm;\n\n  return tansig(sum);\n}\n\nfunction neuron4(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm) {\n  var sum =\n    + 0.774423577181620\n\t+ 0.211591184882422 * b03_norm\n\t- 0.248788896074327 * b04_norm\n\t+ 0.887151598039092 * b05_norm\n\t+ 1.143675895571410 * b06_norm\n\t- 0.753968830338323 * b07_norm\n\t- 1.185456953076760 * b8a_norm\n\t+ 0.541897860471577 * b11_norm\n\t- 0.252685834607768 * b12_norm\n\t- 0.023414901078143 * viewZen_norm\n\t- 0.046022503549557 * sunZen_norm\n\t- 0.006570284080657 * relAzim_norm;\n\n  return tansig(sum);\n}\n\nfunction neuron5(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm) {\n  var sum =\n\t+ 2.584276648534610\n\t+ 0.254790234231378 * b03_norm\n\t- 0.724968611431065 * b04_norm\n\t+ 0.731872806026834 * b05_norm\n\t+ 2.303453821021270 * b06_norm\n\t- 0.849907966921912 * b07_norm\n\t- 6.425315500537270 * b8a_norm\n\t+ 2.238844558459030 * b11_norm\n\t- 0.199937574297990 * b12_norm\n\t+ 0.097303331714567 * viewZen_norm\n\t+ 0.334528254938326 * sunZen_norm\n\t+ 0.113075306591838 * relAzim_norm;\n\n  return tansig(sum);\n}\n\nfunction layer2(neuron1, neuron2, neuron3, neuron4, neuron5) {\n  var sum =\n\t+ 0.463426463933822\n\t- 0.352760040599190 * neuron1\n\t- 0.603407399151276 * neuron2\n\t+ 0.135099379384275 * neuron3\n\t- 1.735673123851930 * neuron4\n\t- 0.147546813318256 * neuron5;\n\n  return sum;\n}\n\nfunction normalize(unnormalized, min, max) {\n  return 2 * (unnormalized - min) / (max - min) - 1;\n}\nfunction denormalize(normalized, min, max) {\n  return 0.5 * (normalized + 1) * (max - min) + min;\n}\nfunction tansig(input) {\n  return 2 / (1 + Math.exp(-2 * input)) - 1; \n}\n\nfunction setup() {\n  return {\n    input: [{\n      bands: [\n          \"B03\",\n          \"B04\",\n          \"B05\",\n          \"B06\",\n          \"B07\",\n          \"B8A\",\n          \"B11\",\n          \"B12\",\n          \"viewZenithMean\",\n          \"viewAzimuthMean\",\n          \"sunZenithAngles\",\n          \"sunAzimuthAngles\"\n      ]\n    }],\n    output: [\n        {\n          id: \"default\",\n          sampleType: \"FLOAT32\",\n          bands: 1\n        }\n    ]\n  }\n}\n\nfunction evaluatePixel(sample, scene, metadata, customData, outputMetadata) {\n  const result = evaluatePixelOrig([sample], [scene], metadata, customData, outputMetadata);\n  return result[Object.keys(result)[0]];\n}\n",
            "input": {
                "bounds": {
                    "bbox": [
                        32.679348,
                        15.57474,
                        32.69042,
                        15.58772
                    ],
                    "properties": {
                        "crs": "http://www.opengis.net/def/crs/EPSG/0/4326"
                    }
                },
                "data": [
                    {
                        "dataFilter": {
                            "timeRange": {
                                "from": "2024-02-06T00:00:00Z",
                                "to": "2024-02-06T23:59:59Z"
                            }
                        },
                        "type": "sentinel-2-l1c"
                    }
                ]
            },
            "output": {
                "height": 143,
                "responses": [
                    {
                        "format": {
                            "type": "image/tiff"
                        },
                        "identifier": "default"
                    }
                ],
                "width": 119
            }
        },
        "timestamp": "2024-04-22T13:47:48.522766",
        "url": "https://services.sentinel-hub.com/api/v1/process"
    },
    "response": {
        "elapsed": 1.808032,
        "headers": {
            "Connection": "keep-alive",
            "Content-Type": "image/tiff",
            "Date": "Mon, 22 Apr 2024 11:47:48 GMT",
            "Transfer-Encoding": "chunked",
            "access-control-allow-credentials": "true",
            "access-control-allow-headers": "origin,content-type,accept,accept-crs,authorization,cache-control",
            "access-control-allow-methods": "GET, POST, PUT, DELETE, OPTIONS, HEAD, PATCH",
            "access-control-allow-origin": "*",
            "access-control-max-age": "3600",
            "x-processingunits-spent": "0.519317626953125"
        },
        "status_code": 200
    }
}