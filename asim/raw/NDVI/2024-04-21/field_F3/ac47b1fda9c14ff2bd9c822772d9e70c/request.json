{
    "request": {
        "headers": {
            "accept": "image/tiff",
            "content-type": "application/json"
        },
        "payload": {
            "evalscript": "//VERSION=3\n\nvar degToRad = Math.PI / 180;\n\nfunction evaluatePixelOrig(samples) {\n    var sample = samples[0];\n    var b03_norm = normalize(sample.B03, 0, 0.253061520471542);\n    var b04_norm = normalize(sample.B04, 0, 0.290393577911328);\n    var b05_norm = normalize(sample.B05, 0, 0.305398915248555);\n    var b06_norm = normalize(sample.B06, 0.006637972542253, 0.608900395797889);\n    var b07_norm = normalize(sample.B07, 0.013972727018939, 0.753827384322927);\n    var b8a_norm = normalize(sample.B8A, 0.026690138082061, 0.782011770669178);\n    var b11_norm = normalize(sample.B11, 0.016388074192258, 0.493761397883092);\n    var b12_norm = normalize(sample.B12, 0, 0.493025984460231);\n    var viewZen_norm = normalize(Math.cos(sample.viewZenithMean * degToRad), 0.918595400582046, 1);\n    var sunZen_norm  = normalize(Math.cos(sample.sunZenithAngles * degToRad), 0.342022871159208, 0.936206429175402);\n    var relAzim_norm = Math.cos((sample.sunAzimuthAngles - sample.viewAzimuthMean) * degToRad)\n  \n    var n1 = neuron1(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm);\n    var n2 = neuron2(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm);\n    var n3 = neuron3(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm);\n    var n4 = neuron4(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm);\n    var n5 = neuron5(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm);\n  \n    var l2 = layer2(n1, n2, n3, n4, n5);\n  \n    var lai = denormalize(l2, 0.000319182538301, 14.4675094548151);\n    return {\n      default: [lai]\n    }\n}\n\nfunction neuron1(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm) {\n    var sum =\n        + 4.96238030555279\n        - 0.023406878966470 * b03_norm\n        + 0.921655164636366 * b04_norm\n        + 0.135576544080099 * b05_norm\n        - 1.938331472397950 * b06_norm\n        - 3.342495816122680 * b07_norm\n        + 0.902277648009576 * b8a_norm\n        + 0.205363538258614 * b11_norm\n        - 0.040607844721716 * b12_norm\n        - 0.083196409727092 * viewZen_norm\n        + 0.260029270773809 * sunZen_norm\n        + 0.284761567218845 * relAzim_norm;\n\n    return tansig(sum);\n}\n\nfunction neuron2(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm) {\n    var sum =\n      + 1.416008443981500\n      - 0.132555480856684 * b03_norm\n      - 0.139574837333540 * b04_norm\n      - 1.014606016898920 * b05_norm\n      - 1.330890038649270 * b06_norm\n      + 0.031730624503341 * b07_norm\n      - 1.433583541317050 * b8a_norm\n      - 0.959637898574699 * b11_norm\n      + 1.133115706551000 * b12_norm\n      + 0.216603876541632 * viewZen_norm\n      + 0.410652303762839 * sunZen_norm\n      + 0.064760155543506 * relAzim_norm;\n  \n    return tansig(sum);\n}\n\nfunction neuron3(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm) {\n    var sum =\n        + 1.075897047213310\n        + 0.086015977724868 * b03_norm\n        + 0.616648776881434 * b04_norm\n        + 0.678003876446556 * b05_norm\n        + 0.141102398644968 * b06_norm\n        - 0.096682206883546 * b07_norm\n        - 1.128832638862200 * b8a_norm\n        + 0.302189102741375 * b11_norm\n        + 0.434494937299725 * b12_norm\n        - 0.021903699490589 * viewZen_norm\n        - 0.228492476802263 * sunZen_norm\n        - 0.039460537589826 * relAzim_norm;\n\n    return tansig(sum);\n}\n  \nfunction neuron4(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm) {\n    var sum =\n      + 1.533988264655420\n      - 0.109366593670404 * b03_norm\n      - 0.071046262972729 * b04_norm\n      + 0.064582411478320 * b05_norm\n      + 2.906325236823160 * b06_norm\n      - 0.673873108979163 * b07_norm\n      - 3.838051868280840 * b8a_norm\n      + 1.695979344531530 * b11_norm\n      + 0.046950296081713 * b12_norm\n      - 0.049709652688365 * viewZen_norm\n      + 0.021829545430994 * sunZen_norm\n      + 0.057483827104091 * relAzim_norm;\n  \n    return tansig(sum);\n}\n  \nfunction neuron5(b03_norm,b04_norm,b05_norm,b06_norm,b07_norm,b8a_norm,b11_norm,b12_norm, viewZen_norm,sunZen_norm,relAzim_norm) {\n    var sum =\n      + 3.024115930757230\n      - 0.089939416159969 * b03_norm\n      + 0.175395483106147 * b04_norm\n      - 0.081847329172620 * b05_norm\n      + 2.219895367487790 * b06_norm\n      + 1.713873975136850 * b07_norm\n      + 0.713069186099534 * b8a_norm\n      + 0.138970813499201 * b11_norm\n      - 0.060771761518025 * b12_norm\n      + 0.124263341255473 * viewZen_norm\n      + 0.210086140404351 * sunZen_norm\n      - 0.183878138700341 * relAzim_norm;\n  \n    return tansig(sum);\n}\n  \nfunction layer2(neuron1, neuron2, neuron3, neuron4, neuron5) {\n    var sum =\n      + 1.096963107077220\n      - 1.500135489728730 * neuron1\n      - 0.096283269121503 * neuron2\n      - 0.194935930577094 * neuron3\n      - 0.352305895755591 * neuron4\n      + 0.075107415847473 * neuron5;\n  \n    return sum;\n}\n  \nfunction normalize(unnormalized, min, max) {\n    return 2 * (unnormalized - min) / (max - min) - 1;\n}\n\nfunction denormalize(normalized, min, max) {\n    return 0.5 * (normalized + 1) * (max - min) + min;\n}\n  \nfunction tansig(input) {\n    return 2 / (1 + Math.exp(-2 * input)) - 1; \n}\n  \nfunction setup() {\n    return {\n      input: [{\n        bands: [\n            \"B03\",\n            \"B04\",\n            \"B05\",\n            \"B06\",\n            \"B07\",\n            \"B8A\",\n            \"B11\",\n            \"B12\",\n            \"viewZenithMean\",\n            \"viewAzimuthMean\",\n            \"sunZenithAngles\",\n            \"sunAzimuthAngles\"\n        ],\n        units: [\"REFLECTANCE\", \"REFLECTANCE\", \"REFLECTANCE\", \"REFLECTANCE\", \"REFLECTANCE\", \"REFLECTANCE\", \"REFLECTANCE\", \"REFLECTANCE\", \"DEGREES\", \"DEGREES\", \"DEGREES\", \"DEGREES\"]\n      }],\n      output: [\n          {\n            id: \"default\",\n            sampleType: \"FLOAT32\",\n            bands: 1\n          }\n      ]\n    }\n}\n\nfunction evaluatePixel(sample, scene, metadata, customData, outputMetadata) {\n  const result = evaluatePixelOrig([sample], [scene], metadata, customData, outputMetadata);\n  return result[Object.keys(result)[0]];\n}",
            "input": {
                "bounds": {
                    "bbox": [
                        32.679348,
                        15.57474,
                        32.69042,
                        15.58772
                    ],
                    "properties": {
                        "crs": "http://www.opengis.net/def/crs/EPSG/0/4326"
                    }
                },
                "data": [
                    {
                        "dataFilter": {
                            "timeRange": {
                                "from": "2024-04-21T00:00:00Z",
                                "to": "2024-04-21T23:59:59Z"
                            }
                        },
                        "type": "sentinel-2-l1c"
                    }
                ]
            },
            "output": {
                "height": 143,
                "responses": [
                    {
                        "format": {
                            "type": "image/tiff"
                        },
                        "identifier": "default"
                    }
                ],
                "width": 119
            }
        },
        "timestamp": "2024-04-22T13:47:19.791851",
        "url": "https://services.sentinel-hub.com/api/v1/process"
    },
    "response": {
        "elapsed": 1.419287,
        "headers": {
            "Connection": "keep-alive",
            "Content-Type": "image/tiff",
            "Date": "Mon, 22 Apr 2024 11:47:19 GMT",
            "Transfer-Encoding": "chunked",
            "access-control-allow-credentials": "true",
            "access-control-allow-headers": "origin,content-type,accept,accept-crs,authorization,cache-control",
            "access-control-allow-methods": "GET, POST, PUT, DELETE, OPTIONS, HEAD, PATCH",
            "access-control-allow-origin": "*",
            "access-control-max-age": "3600",
            "x-processingunits-spent": "0.519317626953125"
        },
        "status_code": 200
    }
}